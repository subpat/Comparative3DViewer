package com.subhadeep.AndroidApp.model.copy_files_data;


import android.util.Log;
import android.content.Context;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;




/**
 *
 * <h1> FileHandler </h1>
 *
 * This class actually assists the CopyThread in copying a file located in the assests folder to disk.
 *
 * @author  Subhadeep Patra
 * @version 1.0
 * @since   2019-01-15
 *
 */


public class FileHandler {


    /**
     * This variable should be set to true, if console debug messages related to this class are desired.
     *
     */
    private static final boolean debug = false;

    /**
     * This variable stores the tag of the debug messages generated by this class.
     *
     */
    private static final String debugTag = "Utils::FileHandler";




    /**
     * This private function is used to read an file and make a copy of it.
     *
     * @param in is the {@link InputStream} object.
     * @param out is the {@link OutputStream} object.
     * @throws IOException
     *
     */
    private static void copyFile(InputStream in, OutputStream out) throws IOException
    {
        byte[] buffer = new byte[1024];
        int read;
        while((read = in.read(buffer)) != -1) {
            out.write(buffer, 0, read);
        }
    }


    /**
     * This function opens an {@link InputStream} and {@link OutputStream},
     * and copies the data contained in the input file to the output file with the help of the {@link #copyFile(InputStream, OutputStream)} function.
     *
     * @param context is the {@link Context} object for this app.
     * @param filename is the file to be copied.
     * @return A boolean denoting the success or failure in the copy process. True is returned if the file was successfully copies, else returns false.
     */
    public static boolean copyAssetFileToStorage(Context context, String filename)
    {

        String path = context.getExternalFilesDir(null).getAbsolutePath();
        File destFile = new File(path + File.separator + filename);
        if(debug)   Log.i(debugTag, path + File.separator + filename);
        if (destFile.exists()) {
            return true;
        }
        try
        {
            InputStream in = context.getAssets().open(filename);
            OutputStream out = new FileOutputStream(path + File.separator + filename);
            copyFile(in, out);
            in.close();
            out.flush();
            out.close();
        }
        catch(Exception e)
        {
            return false;
        }
        return true;
    }
}
